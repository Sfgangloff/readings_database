{"ast":null,"code":"var _jsxFileName = \"/home/silvere/Desktop/Apps/readinglist/src/editable.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Editable extends Component {\n  constructor(props) {\n    super(props);\n    this.changeEditMode = () => {\n      this.setState({\n        isInEditMode: !this.state.isInEditMode\n      });\n    };\n    this.updateComponentValue = () => {\n      this.setState({\n        isInEditMode: false,\n        value: this.refs.theTextInput.value\n      });\n    };\n    this.renderEditView = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          defaultValue: this.state.value,\n          ref: \"theTextInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.changeEditMode,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.updateComponentValue,\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 10\n      }, this);\n    };\n    this.renderDefaultView = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onDoubleClick: this.changeEditMode,\n        children: this.state.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }, this);\n    };\n    this.state = {\n      value: this.props.value,\n      isInEditMode: this.props.isInEditMode\n    };\n    this.changeEditMode = this.changeEditMode.bind(this);\n    this.updateComponentValue = this.updateComponentValue(this);\n    this.renderEditView = this.renderEditView.bind(this);\n    this.renderDefaultView = this.renderDefaultView.bind(this);\n  }\n\n  //state = {\n  //  value : \"Some text\", \n  //  isInEditMode: false\n  //}\n\n  render() {\n    return this.state.isInEditMode ? this.renderEditView() : this.renderDefaultView();\n  }\n}\nexport default Editable;","map":{"version":3,"names":["React","Component","Editable","constructor","props","changeEditMode","setState","isInEditMode","state","updateComponentValue","value","refs","theTextInput","renderEditView","renderDefaultView","bind","render"],"sources":["/home/silvere/Desktop/Apps/readinglist/src/editable.js"],"sourcesContent":["import React, { Component } from 'react';\n\nclass Editable extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n        value:this.props.value, \n        isInEditMode:this.props.isInEditMode,\n    }\n\n    this.changeEditMode = this.changeEditMode.bind(this)\n    this.updateComponentValue = this.updateComponentValue(this)\n    this.renderEditView = this.renderEditView.bind(this)\n    this.renderDefaultView = this.renderDefaultView.bind(this)\n    \n}\n\n\n//state = {\n//  value : \"Some text\", \n//  isInEditMode: false\n//}\n\nchangeEditMode = () => {\n  this.setState(\n    {\n      isInEditMode:!this.state.isInEditMode\n    }\n  )\n}\n\nupdateComponentValue= () => {\n  this.setState({\n    isInEditMode:false,\n    value: this.refs.theTextInput.value\n  })\n}\n\nrenderEditView = () => {\n  return <div>\n    <input type=\"text\" \n           defaultValue={this.state.value}\n           ref=\"theTextInput\"/>\n  <button onClick={this.changeEditMode}>X</button>\n  <button onClick={this.updateComponentValue}>OK</button></div>\n}\n\nrenderDefaultView = () => {\n  return <div onDoubleClick = {this.changeEditMode}> \n  {this.state.value}\n</div>\n}\n\n  render() {\n    return this.state.isInEditMode ? \n     this.renderEditView() : this.renderDefaultView()\n    \n  }\n}\n\nexport default Editable;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC;AAEzC,MAAMC,QAAQ,SAASD,SAAS,CAAC;EAE/BE,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAA,KAoBhBC,cAAc,GAAG,MAAM;MACrB,IAAI,CAACC,QAAQ,CACX;QACEC,YAAY,EAAC,CAAC,IAAI,CAACC,KAAK,CAACD;MAC3B,CAAC,CACF;IACH,CAAC;IAAA,KAEDE,oBAAoB,GAAE,MAAM;MAC1B,IAAI,CAACH,QAAQ,CAAC;QACZC,YAAY,EAAC,KAAK;QAClBG,KAAK,EAAE,IAAI,CAACC,IAAI,CAACC,YAAY,CAACF;MAChC,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDG,cAAc,GAAG,MAAM;MACrB,oBAAO;QAAA,wBACL;UAAO,IAAI,EAAC,MAAM;UACX,YAAY,EAAE,IAAI,CAACL,KAAK,CAACE,KAAM;UAC/B,GAAG,EAAC;QAAc;UAAA;UAAA;UAAA;QAAA,QAAE,eAC7B;UAAQ,OAAO,EAAE,IAAI,CAACL,cAAe;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAW,eAChD;UAAQ,OAAO,EAAE,IAAI,CAACI,oBAAqB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM;IAC/D,CAAC;IAAA,KAEDK,iBAAiB,GAAG,MAAM;MACxB,oBAAO;QAAK,aAAa,EAAI,IAAI,CAACT,cAAe;QAAA,UAChD,IAAI,CAACG,KAAK,CAACE;MAAK;QAAA;QAAA;QAAA;MAAA,QACb;IACN,CAAC;IA9CG,IAAI,CAACF,KAAK,GAAG;MACTE,KAAK,EAAC,IAAI,CAACN,KAAK,CAACM,KAAK;MACtBH,YAAY,EAAC,IAAI,CAACH,KAAK,CAACG;IAC5B,CAAC;IAED,IAAI,CAACF,cAAc,GAAG,IAAI,CAACA,cAAc,CAACU,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACN,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAAC,IAAI,CAAC;IAC3D,IAAI,CAACI,cAAc,GAAG,IAAI,CAACA,cAAc,CAACE,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACD,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAAC;EAE9D;;EAGA;EACA;EACA;EACA;;EAgCEC,MAAM,GAAG;IACP,OAAO,IAAI,CAACR,KAAK,CAACD,YAAY,GAC7B,IAAI,CAACM,cAAc,EAAE,GAAG,IAAI,CAACC,iBAAiB,EAAE;EAEnD;AACF;AAEA,eAAeZ,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}